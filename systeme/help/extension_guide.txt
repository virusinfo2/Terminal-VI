Guide de création d'extensions pour votre programme

Bienvenue dans le guide de création d'extensions pour notre programme. Les extensions vous permettent d'ajouter de nouvelles fonctionnalités et de personnaliser votre expérience utilisateur. Voici quelques étapes pour créer vos propres extensions :

1. Comprendre les API :

Les API (Interfaces de Programmation d'Applications) sont des ensembles de fonctions et de procédures qui permettent à des logiciels tiers de communiquer avec votre programme.
Pour intégrer une extension, vous devez comprendre les API disponibles. Voici quelques-unes des API prises en charge :
Python : Utilisez %python% pour intégrer des scripts Python.
7zip : Utilisez %7zip% pour effectuer des opérations de compression et de décompression.
2. Créer une extension :

Créez un nouveau dossier pour votre extension et placez-y vos fichiers.
Assurez-vous que votre extension contient un fichier start.bat obligatoirement. Ce fichier sera utilisé pour démarrer l'extension.
Si vous utilisez Python, créez un script Python et placez-le dans le dossier de l'extension.
Si vous avez besoin de fonctionnalités de compression, vous pouvez utiliser l'outil %7zip%.
3. Intégrer l'extension :

Assurez-vous que votre programme est configuré pour reconnaître et charger les extensions.
Si nécessaire, ajoutez des paramètres ou des options pour permettre à l'utilisateur de gérer les extensions.
4. Documentation :

Documentez votre API pour aider les développeurs à comprendre comment utiliser votre programme et ses extensions.
Incluez des exemples d'utilisation et des instructions pour faciliter la création d'extensions.
N'oubliez pas de tester vos extensions et de les rendre disponibles pour les utilisateurs de votre programme !

------------------------liste des API------------------------
Variable	                               Description	                                                                                                               Exemple	                                                        Utilisation

%log%	    Contient le chemin vers le fichier journal (log) utilisé pour enregistrer les événements, erreurs ou autres messages.	                                  systeme/logs/log1145.log	                     Utilisé pour centraliser les messages de log dans un script, facilitant ainsi la gestion des journaux et le diagnostic des problèmes.
%tee%	    Permet de lire le flux d'entrée et de le rediriger vers plusieurs sorties, notamment vers un fichier et vers la sortie standard.	                      tee 	                                         Idéal pour enregistrer la sortie d'une commande tout en la montrant à l'écran en même temps.
%7zip%	    Utilitaire de compression/décompression de fichiers qui prend en charge divers formats comme .zip, .7z, .tar, etc.	7z.exe	                                                                             Utilisé pour compresser ou extraire des archives. Très utile pour la gestion de fichiers volumineux ou l'archivage de données.
%curl%	    Outil de ligne de commande pour transférer des données depuis ou vers un serveur à l'aide de différents protocoles (HTTP, HTTPS, FTP, etc.).	            curl.exe                                     Utilisé pour télécharger des fichiers, interagir avec des APIs web, ou envoyer des données à un serveur.
%findstr%	Outil de recherche de texte qui permet de rechercher des chaînes de caractères dans les fichiers.	findstr.exe	                                                                                         Très utile pour filtrer et rechercher des informations spécifiques dans des fichiers de log ou autres fichiers texte.
%xcopy%	    Commande de copie avancée qui permet de copier des fichiers et des répertoires, avec des options supplémentaires par rapport à la commande copy.              xcopy.exe                                  Utilisé pour copier des fichiers et des dossiers avec des options telles que la copie récursive et la préservation des attributs.
%nano%	    Éditeur de texte en mode console, généralement utilisé sur Unix/Linux.	nano (alternatives sur Windows : Notepad++, Vim)	                                                                             Utilisé pour éditer des fichiers texte directement depuis la ligne de commande.
%sha256%	Outil pour calculer la somme de contrôle SHA-256 d'un fichier, permettant de vérifier l'intégrité des données.	CertUtil -hashfile (Windows)        	                                                 Utilisé pour vérifier si un fichier a été modifié ou corrompu en comparant la somme de contrôle SHA-256.
%CRC32%	    Outil pour calculer le code de redondance cyclique (CRC32) d'un fichier.	crc32.exe (peut nécessiter un utilitaire tiers sur Windows)	                                                                 Utilisé pour vérifier l'intégrité des fichiers en calculant et en comparant les valeurs CRC32.
%nircmdc%	Outil de ligne de commande pour effectuer diverses tâches système, comme manipuler les fenêtres, ajuster le volume, etc.	nircmd.exe	                                                                 Pratique pour automatiser des tâches administratives ou contrôler des aspects de l'interface utilisateur à partir de la ligne de commande.
%wget%	    Outil de téléchargement de fichiers à partir du web utilisant des protocoles comme HTTP, HTTPS et FTP.	wget.exe	                                                                                     Utilisé pour télécharger des fichiers depuis le web ou automatiser le téléchargement de contenu.



  test
    ├── Start.bat
    ├── version.ini
    ├── checksums.sha256
    ├── dependencies.ini
    └── Bin
